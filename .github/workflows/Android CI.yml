name: Android CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:

  # code-quality:
  #   name: Code Quality & Unit Tests
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Set up JDK
  #       uses: actions/setup-java@v4
  #       with:
  #         distribution: temurin
  #         java-version: 17

  #     - name: Grant execute permission to gradlew
  #       run: chmod +x ./gradlew

  #     - name: Run Lint
  #       run: ./gradlew lint

  #     - name: Run detekt
  #       run: ./gradlew detekt

  #     - name: Run Unit Tests
  #       run: ./gradlew testDebugUnitTest


    # needs: code-quality WICHTIG HINTER NAME EINFÃœGEN 

  instrumentation-tests:
    name: Instrumentation Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        api-level: [33]
    env:
      ANDROID_SDK_ROOT: /usr/local/lib/android/sdk
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Android SDK and AVD
        uses: actions/cache@v3
        with:
          path: |
            ~/.android
            ${{ env.ANDROID_SDK_ROOT }}
          key: ${{ runner.os }}-android-sdk-${{ matrix.api-level }}
          restore-keys: |
            ${{ runner.os }}-android-sdk-

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Install required SDK packages
        run: |
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" \
                     "emulator" \
                     "platforms;android-${{ matrix.api-level }}" \
                     "system-images;android-${{ matrix.api-level }};google_apis;x86_64"

      - name: Add emulator to PATH
        run: echo "${{ env.ANDROID_SDK_ROOT }}/emulator" >> $GITHUB_PATH

      - name: Create and start emulator
        run: |
          echo "no" | avdmanager create avd -n ci-emulator -k "system-images;android-${{ matrix.api-level }};google_apis;x86_64" --force
          nohup emulator -avd ci-emulator -no-window -no-audio -gpu swiftshader_indirect &
          adb wait-for-device
          adb shell 'while [[ -z "$(getprop sys.boot_completed)" ]]; do sleep 5; done;'


#  build-apk:
#    name: Build Debug APK
#    needs: [instrumentation-tests]
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4

#      - name: Set up JDK
#        uses: actions/setup-java@v4
#        with:
#          distribution: temurin
#          java-version: 17

#      - name: Grant execute permission to gradlew
#        run: chmod +x ./gradlew

#      - name: Build Debug APK
#        run: ./gradlew assembleDebug

#      - name: Upload APK
#        uses: actions/upload-artifact@v4
#        with:
#          name: debug-apk
#          path: app/build/outputs/apk/debug/app-debug.apk
